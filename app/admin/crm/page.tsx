import AdminLayout from "@/components/admin/layout/admin-layout"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Search, Filter, MoreHorizontal, Download, UserPlus } from "lucide-react"

// Mock data for leads
const leads = [
  {
    id: 1,
    name: "Robert Johnson",
    email: "robert.j@example.com",
    phone: "(206) 555-1234",
    status: "In Conversation",
    lastInteraction: "May 12, 2025",
    assignedProvider: null,
    careType: "Assisted Living",
    location: "Seattle, WA",
  },
  {
    id: 2,
    name: "Maria Garcia",
    email: "maria.g@example.com",
    phone: "(206) 555-5678",
    status: "Scheduled",
    lastInteraction: "May 11, 2025",
    assignedProvider: "Sunrise Senior Living",
    careType: "Memory Care",
    location: "Bellevue, WA",
  },
  {
    id: 3,
    name: "David Lee",
    email: "david.l@example.com",
    phone: "(206) 555-9012",
    status: "Converted",
    lastInteraction: "May 10, 2025",
    assignedProvider: "Golden Years Care",
    careType: "Independent Living",
    location: "Tacoma, WA",
  },
  {
    id: 4,
    name: "Sarah Wilson",
    email: "sarah.w@example.com",
    phone: "(206) 555-3456",
    status: "In Conversation",
    lastInteraction: "May 9, 2025",
    assignedProvider: null,
    careType: "Home Care",
    location: "Everett, WA",
  },
  {
    id: 5,
    name: "Michael Brown",
    email: "michael.b@example.com",
    phone: "(206) 555-7890",
    status: "Scheduled",
    lastInteraction: "May 8, 2025",
    assignedProvider: "Comfort Home Care",
    careType: "Assisted Living",
    location: "Redmond, WA",
  },
  {
    id: 6,
    name: "Jennifer Davis",
    email: "jennifer.d@example.com",
    phone: "(206) 555-2345",
    status: "In Conversation",
    lastInteraction: "May 7, 2025",
    assignedProvider: null,
    careType: "Nursing Home",
    location: "Kirkland, WA",
  },
]

export default function CRMPage() {
  return (
    <AdminLayout>
      <div className="flex flex-col gap-6">
        <div className="flex justify-between items-center">
          <div>
            <h1 className="text-3xl font-bold tracking-tight">Client Relationship Management</h1>
            <p className="text-muted-foreground mt-1">
              Manage leads and client relationships generated by the platform.
            </p>
          </div>
          <Button className="bg-[#9bc3a2] hover:bg-[#9bc3a2]/90">
            <UserPlus className="mr-2 h-4 w-4" />
            Add Lead Manually
          </Button>
        </div>

        <Card className="border-[#c2dacc]">
          <CardHeader className="pb-3">
            <div className="flex justify-between items-center">
              <div>
                <CardTitle>Client Leads</CardTitle>
                <CardDescription>Leads generated by the AI chatbot and other sources.</CardDescription>
              </div>
              <div className="flex gap-2">
                <Button variant="outline" size="sm" className="border-[#c2dacc]">
                  <Filter className="mr-2 h-4 w-4" />
                  Filter
                </Button>
                <Button variant="outline" size="sm" className="border-[#c2dacc]">
                  <Download className="mr-2 h-4 w-4" />
                  Export
                </Button>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            <Tabs defaultValue="all" className="w-full">
              <TabsList className="bg-[#d1eee4]">
                <TabsTrigger value="all" className="data-[state=active]:bg-[#9bc3a2] data-[state=active]:text-white">
                  All Leads
                </TabsTrigger>
                <TabsTrigger
                  value="conversation"
                  className="data-[state=active]:bg-[#9bc3a2] data-[state=active]:text-white"
                >
                  In Conversation
                </TabsTrigger>
                <TabsTrigger
                  value="scheduled"
                  className="data-[state=active]:bg-[#9bc3a2] data-[state=active]:text-white"
                >
                  Scheduled
                </TabsTrigger>
                <TabsTrigger
                  value="converted"
                  className="data-[state=active]:bg-[#9bc3a2] data-[state=active]:text-white"
                >
                  Converted
                </TabsTrigger>
              </TabsList>

              <div className="my-4">
                <div className="relative">
                  <Search className="absolute left-2 top-2.5 h-4 w-4 text-muted-foreground" />
                  <Input placeholder="Search leads..." className="pl-8 focus-visible:ring-[#9bc3a2]" />
                </div>
              </div>

              <TabsContent value="all" className="mt-0">
                <div className="rounded-md border border-[#c2dacc]">
                  <Table>
                    <TableHeader className="bg-[#d1eee4]/50">
                      <TableRow>
                        <TableHead>Name</TableHead>
                        <TableHead>Care Type</TableHead>
                        <TableHead>Location</TableHead>
                        <TableHead>Status</TableHead>
                        <TableHead>Last Interaction</TableHead>
                        <TableHead>Assigned Provider</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {leads.map((lead) => (
                        <TableRow key={lead.id}>
                          <TableCell className="font-medium">
                            <div>
                              <div>{lead.name}</div>
                              <div className="text-xs text-muted-foreground">{lead.email}</div>
                            </div>
                          </TableCell>
                          <TableCell>{lead.careType}</TableCell>
                          <TableCell>{lead.location}</TableCell>
                          <TableCell>
                            <Badge
                              className={
                                lead.status === "Converted"
                                  ? "bg-green-100 text-green-800 hover:bg-green-100"
                                  : lead.status === "Scheduled"
                                    ? "bg-blue-100 text-blue-800 hover:bg-blue-100"
                                    : "bg-yellow-100 text-yellow-800 hover:bg-yellow-100"
                              }
                            >
                              {lead.status}
                            </Badge>
                          </TableCell>
                          <TableCell>{lead.lastInteraction}</TableCell>
                          <TableCell>
                            {lead.assignedProvider || (
                              <span className="text-muted-foreground text-sm">Not assigned</span>
                            )}
                          </TableCell>
                          <TableCell className="text-right">
                            <DropdownMenu>
                              <DropdownMenuTrigger asChild>
                                <Button variant="ghost" className="h-8 w-8 p-0">
                                  <span className="sr-only">Open menu</span>
                                  <MoreHorizontal className="h-4 w-4" />
                                </Button>
                              </DropdownMenuTrigger>
                              <DropdownMenuContent align="end">
                                <DropdownMenuLabel>Actions</DropdownMenuLabel>
                                <DropdownMenuItem>View details</DropdownMenuItem>
                                <DropdownMenuItem>Edit lead</DropdownMenuItem>
                                <DropdownMenuSeparator />
                                <DropdownMenuItem>View conversation</DropdownMenuItem>
                                {!lead.assignedProvider && <DropdownMenuItem>Assign to provider</DropdownMenuItem>}
                                <DropdownMenuSeparator />
                                <DropdownMenuItem className="text-red-600">Delete lead</DropdownMenuItem>
                              </DropdownMenuContent>
                            </DropdownMenu>
                          </TableCell>
                        </TableRow>
                      ))}
                    </TableBody>
                  </Table>
                </div>
              </TabsContent>

              <TabsContent value="conversation" className="mt-0">
                <div className="rounded-md border border-[#c2dacc]">
                  <Table>
                    <TableHeader className="bg-[#d1eee4]/50">
                      <TableRow>
                        <TableHead>Name</TableHead>
                        <TableHead>Care Type</TableHead>
                        <TableHead>Location</TableHead>
                        <TableHead>Status</TableHead>
                        <TableHead>Last Interaction</TableHead>
                        <TableHead>Assigned Provider</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {leads
                        .filter((lead) => lead.status === "In Conversation")
                        .map((lead) => (
                          <TableRow key={lead.id}>
                            <TableCell className="font-medium">
                              <div>
                                <div>{lead.name}</div>
                                <div className="text-xs text-muted-foreground">{lead.email}</div>
                              </div>
                            </TableCell>
                            <TableCell>{lead.careType}</TableCell>
                            <TableCell>{lead.location}</TableCell>
                            <TableCell>
                              <Badge className="bg-yellow-100 text-yellow-800 hover:bg-yellow-100">{lead.status}</Badge>
                            </TableCell>
                            <TableCell>{lead.lastInteraction}</TableCell>
                            <TableCell>
                              {lead.assignedProvider || (
                                <span className="text-muted-foreground text-sm">Not assigned</span>
                              )}
                            </TableCell>
                            <TableCell className="text-right">
                              <DropdownMenu>
                                <DropdownMenuTrigger asChild>
                                  <Button variant="ghost" className="h-8 w-8 p-0">
                                    <span className="sr-only">Open menu</span>
                                    <MoreHorizontal className="h-4 w-4" />
                                  </Button>
                                </DropdownMenuTrigger>
                                <DropdownMenuContent align="end">
                                  <DropdownMenuLabel>Actions</DropdownMenuLabel>
                                  <DropdownMenuItem>View details</DropdownMenuItem>
                                  <DropdownMenuItem>Edit lead</DropdownMenuItem>
                                  <DropdownMenuSeparator />
                                  <DropdownMenuItem>View conversation</DropdownMenuItem>
                                  {!lead.assignedProvider && <DropdownMenuItem>Assign to provider</DropdownMenuItem>}
                                  <DropdownMenuSeparator />
                                  <DropdownMenuItem className="text-red-600">Delete lead</DropdownMenuItem>
                                </DropdownMenuContent>
                              </DropdownMenu>
                            </TableCell>
                          </TableRow>
                        ))}
                    </TableBody>
                  </Table>
                </div>
              </TabsContent>

              <TabsContent value="scheduled" className="mt-0">
                {/* Similar table structure for scheduled leads */}
                <div className="rounded-md border border-[#c2dacc]">
                  <Table>
                    <TableHeader className="bg-[#d1eee4]/50">
                      <TableRow>
                        <TableHead>Name</TableHead>
                        <TableHead>Care Type</TableHead>
                        <TableHead>Location</TableHead>
                        <TableHead>Status</TableHead>
                        <TableHead>Last Interaction</TableHead>
                        <TableHead>Assigned Provider</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {leads
                        .filter((lead) => lead.status === "Scheduled")
                        .map((lead) => (
                          <TableRow key={lead.id}>
                            <TableCell className="font-medium">
                              <div>
                                <div>{lead.name}</div>
                                <div className="text-xs text-muted-foreground">{lead.email}</div>
                              </div>
                            </TableCell>
                            <TableCell>{lead.careType}</TableCell>
                            <TableCell>{lead.location}</TableCell>
                            <TableCell>
                              <Badge className="bg-blue-100 text-blue-800 hover:bg-blue-100">{lead.status}</Badge>
                            </TableCell>
                            <TableCell>{lead.lastInteraction}</TableCell>
                            <TableCell>{lead.assignedProvider}</TableCell>
                            <TableCell className="text-right">
                              <DropdownMenu>
                                <DropdownMenuTrigger asChild>
                                  <Button variant="ghost" className="h-8 w-8 p-0">
                                    <span className="sr-only">Open menu</span>
                                    <MoreHorizontal className="h-4 w-4" />
                                  </Button>
                                </DropdownMenuTrigger>
                                <DropdownMenuContent align="end">
                                  <DropdownMenuLabel>Actions</DropdownMenuLabel>
                                  <DropdownMenuItem>View details</DropdownMenuItem>
                                  <DropdownMenuItem>Edit lead</DropdownMenuItem>
                                  <DropdownMenuSeparator />
                                  <DropdownMenuItem>View conversation</DropdownMenuItem>
                                  <DropdownMenuItem>Change provider</DropdownMenuItem>
                                  <DropdownMenuSeparator />
                                  <DropdownMenuItem className="text-red-600">Delete lead</DropdownMenuItem>
                                </DropdownMenuContent>
                              </DropdownMenu>
                            </TableCell>
                          </TableRow>
                        ))}
                    </TableBody>
                  </Table>
                </div>
              </TabsContent>

              <TabsContent value="converted" className="mt-0">
                {/* Similar table structure for converted leads */}
                <div className="rounded-md border border-[#c2dacc]">
                  <Table>
                    <TableHeader className="bg-[#d1eee4]/50">
                      <TableRow>
                        <TableHead>Name</TableHead>
                        <TableHead>Care Type</TableHead>
                        <TableHead>Location</TableHead>
                        <TableHead>Status</TableHead>
                        <TableHead>Last Interaction</TableHead>
                        <TableHead>Assigned Provider</TableHead>
                        <TableHead className="text-right">Actions</TableHead>
                      </TableRow>
                    </TableHeader>
                    <TableBody>
                      {leads
                        .filter((lead) => lead.status === "Converted")
                        .map((lead) => (
                          <TableRow key={lead.id}>
                            <TableCell className="font-medium">
                              <div>
                                <div>{lead.name}</div>
                                <div className="text-xs text-muted-foreground">{lead.email}</div>
                              </div>
                            </TableCell>
                            <TableCell>{lead.careType}</TableCell>
                            <TableCell>{lead.location}</TableCell>
                            <TableCell>
                              <Badge className="bg-green-100 text-green-800 hover:bg-green-100">{lead.status}</Badge>
                            </TableCell>
                            <TableCell>{lead.lastInteraction}</TableCell>
                            <TableCell>{lead.assignedProvider}</TableCell>
                            <TableCell className="text-right">
                              <DropdownMenu>
                                <DropdownMenuTrigger asChild>
                                  <Button variant="ghost" className="h-8 w-8 p-0">
                                    <span className="sr-only">Open menu</span>
                                    <MoreHorizontal className="h-4 w-4" />
                                  </Button>
                                </DropdownMenuTrigger>
                                <DropdownMenuContent align="end">
                                  <DropdownMenuLabel>Actions</DropdownMenuLabel>
                                  <DropdownMenuItem>View details</DropdownMenuItem>
                                  <DropdownMenuItem>View conversation</DropdownMenuItem>
                                  <DropdownMenuSeparator />
                                  <DropdownMenuItem>View contract</DropdownMenuItem>
                                  <DropdownMenuItem className="text-red-600">Delete lead</DropdownMenuItem>
                                </DropdownMenuContent>
                              </DropdownMenu>
                            </TableCell>
                          </TableRow>
                        ))}
                    </TableBody>
                  </Table>
                </div>
              </TabsContent>
            </Tabs>
          </CardContent>
        </Card>
      </div>
    </AdminLayout>
  )
}
